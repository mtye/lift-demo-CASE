 * Notes for Step 0

The pom.xml file and the contents of the src directory were generated by Maven
using the following command:

  mvn archetype:generate -U -DarchetypeGroupId=net.liftweb \
                            -DarchetypeArtifactId=lift-archetype-basic \
                            -DarchetypeVersion=2.0-M3

And specifying:

  "com.marktye"      for the groupId,
  "lift-demo-CASE"   for the artifactId,
  "1.0-SNAPSHOT"     for the version, and
  "com.marktye.rhcp" for the package.

The Maven-generated web application can be compiled and executed with the
command:

  mvn jetty:run


 * Notes for Step 1

As a precursor to developing the Giveaway application, some of the artifacts
generated by the Maven archetype were deleted or changed.

The application does not serve any static files, so the "static" directory
under src/main/webapp was deleted, along with the corresponding menu entry in
the Boot.scala file.

The "lift-archetype-basic" archetype uses the artifactId specified in the
generation process to customize several elements of the application's "chrome",
e.g., the home page, the default page title, and the header. The artifactId
used in this case, "lift-demo-CASE", is somewhat inelegant, so the default
template and home page were changed to use the title "RHCP" instead.


 * Notes for Step 2

The first feature for the Giveaway application is a page for creating new
giveaways. A template named "create.html" was created in the
"src/main/webapp/giveaway" directory. This template uses the "lift:surround"
tag to embed its content within the default template, thus retaining the same
layout, styling, and menu as the home page.

The "<lift:Giveaway.create>" tag in the template references a method named
"create" in the "Giveaway" snippet, which is in the com.marktye.rhcp.snippet
package. This method binds dynamic content to tags within the
"<lift:Giveaway.create>" tag. The "<g:name>" tag is bound to an "input" form
element of type "text", the "<g:description>" tag is bound to a "textarea"
form element, and the "<g:submit>" tag is bound to a submit button.

The form elements are generated with the net.liftweb.http.SHtml object, which
has a wide variety of helper methods for creating HTML markup. The second
parameter to the "text" and "textarea" methods is a function that will be
invoked when the form is submitted. These functions are used to capture the
values of the input and textarea elements and assign them to local variables.
The second parameter to the "submit" method is also a function that is invoked
when the form is submitted. It sends a success message to the notification area
below the menu and redirects the user to the home page.

Finally, a menu item for the new page was created in the Boot.scala file and
added to the list of menu entries. The menu item tells Lift to make the new
page accessible at a relative URL of "giveaway/create" and display a
corresponding menu link with the title "Create New Giveaway".


 * Copyright and License

Copyright Â© 2010 Mark Tye

This work is licensed under the Creative Commons Attribution-Noncommercial-Share
Alike 3.0 United States License. To view a copy of this license, visit

  http://creativecommons.org/licenses/by-nc-sa/3.0/us/
